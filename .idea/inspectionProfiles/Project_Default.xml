<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="Project Default" />
    <inspection_tool class="PyArgumentEqualDefaultInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true" />
    <inspection_tool class="PyCompatibilityInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ourVersions">
        <value>
          <list size="2">
            <item index="0" class="java.lang.String" itemvalue="2.7" />
            <item index="1" class="java.lang.String" itemvalue="3.6" />
          </list>
        </value>
      </option>
    </inspection_tool>
    <inspection_tool class="PyDictCreationInspection" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="PyMethodMayBeStaticInspection" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoredPackages">
        <value>
          <list size="20">
            <item index="0" class="java.lang.String" itemvalue="Werkzeug" />
            <item index="1" class="java.lang.String" itemvalue="statsd" />
            <item index="2" class="java.lang.String" itemvalue="requests" />
            <item index="3" class="java.lang.String" itemvalue="django-compressor" />
            <item index="4" class="java.lang.String" itemvalue="gunicorn" />
            <item index="5" class="java.lang.String" itemvalue="pycrypto" />
            <item index="6" class="java.lang.String" itemvalue="newrelic" />
            <item index="7" class="java.lang.String" itemvalue="django-hosts" />
            <item index="8" class="java.lang.String" itemvalue="sqlparse" />
            <item index="9" class="java.lang.String" itemvalue="mixpanel-python" />
            <item index="10" class="java.lang.String" itemvalue="django-unslashed" />
            <item index="11" class="java.lang.String" itemvalue="Unidecode" />
            <item index="12" class="java.lang.String" itemvalue="django-mobile" />
            <item index="13" class="java.lang.String" itemvalue="Django" />
            <item index="14" class="java.lang.String" itemvalue="python-social-auth" />
            <item index="15" class="java.lang.String" itemvalue="django-ratelimit" />
            <item index="16" class="java.lang.String" itemvalue="python-openid" />
            <item index="17" class="java.lang.String" itemvalue="ua-parser" />
            <item index="18" class="java.lang.String" itemvalue="django-cors-headers" />
            <item index="19" class="java.lang.String" itemvalue="django-ipware" />
          </list>
        </value>
      </option>
    </inspection_tool>
    <inspection_tool class="PyPep8Inspection" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="PyPep8NamingInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoredBaseClasses">
        <list />
      </option>
    </inspection_tool>
    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoredIdentifiers">
        <list>
          <option value="workers.UnverifiedYodleeFbbidQuery" />
          <option value="mocktest.mocking.MockAct.post_request" />
          <option value="mocktest.mocking.MockAct.get_success_verification_type" />
          <option value="mocktest.mocking.MockAct.generate_vendor_response" />
          <option value="mocktest.mocking.MockAct.get_verification_requests" />
          <option value="mocktest.mocking.MockAct.generate_verification_response" />
          <option value="mocktest.mocking.MockAct.get_token" />
          <option value="mocktest.mocking.MockAct.store_new_attempt" />
          <option value="mocktest.mocking.MockAct.getEncryptedSSNCollection" />
          <option value="mocktest.mocking.MockAct.decrypt" />
          <option value="mocktest.mocking.MockAct.is_match" />
          <option value="mocktest.mocking.MockAct.isValid" />
          <option value="mocktest.mocking.MockAct.entities" />
          <option value="mocktest.mocking.MockAct.getEntitiesUpdater" />
          <option value="mocktest.mocking.MockAct.getEntities" />
          <option value="mocktest.mocking.MockAct.isMatched" />
          <option value="sstorage.services.sstorage_logic.tnx_monitoring.TransactionMonitoringMatcher.TnxMonitoringMatcher.getMatchedSSNs" />
          <option value="mocktest.mocking.MockAct.storeEntity" />
          <option value="mocktest.mocking.MockAct.shouldRun" />
          <option value="mocktest.mocking.MockAct.match" />
          <option value="mocktest.mocking.MockAct.getFileId" />
          <option value="mocktest.mocking.MockAct.markAsDone" />
          <option value="sstorage.services.sstorage_logic.tnx_monitoring.SSNMatchHandler.*" />
          <option value="mocktest.mocking.MockAct.get_payment_methods_for_business" />
          <option value="mocktest.mocking.MockAct.get_unverified_fi_connected_accounts" />
          <option value="mocktest.mocking.MockAct.get_item_accounts_by_fbbid" />
          <option value="mocktest.mocking.MockAct.verify_by_match" />
          <option value="mocktest.mocking.MockAct.isMatch" />
          <option value="mocktest.mocking.MockAct.query" />
          <option value="mocktest.mocking.MockAct.post" />
          <option value="mocktest.mocking.MockAct.generateVerificationResponse" />
          <option value="mocktest.mocking.MockAct.getGroups" />
          <option value="mocktest.mocking.MockAct.add_ssn_secret" />
          <option value="common.models.payments.PaymentPlan.PaymentPlan.direct_draw_payments" />
          <option value="common.models.payments.PaymentPlan.PaymentPlan.buyer_finance_payments" />
          <option value="mocktest.mocking.MockAct.getPaymentStatus" />
          <option value="mocktest.mocking.MockAct.resolveByPaymentId" />
          <option value="mocktest.mocking.MockAct.getAdhocMethodForBusiness" />
          <option value="mocktest.mocking.MockAct.preparePaymentForOneTimeTransaction" />
          <option value="mocktest.mocking.MockAct.settlePaymentIds" />
          <option value="mocktest.mocking.MockAct.updatePaymentsWithTransactionStatus" />
          <option value="mocktest.mocking.MockAct.adhocPaymentsFailed" />
          <option value="mocktest.mocking.MockAct.getPaymentById" />
          <option value="mocktest.mocking.MockAct.fetch_gverify" />
          <option value="services.fi_connect.FIConnectQueueService.FIConnectQueueService.registered_api_funcs" />
          <option value="services.feature_flags.PreLoadedExperimentOptions.INVOICE_CLEARING_DRAW_PANE_GROUP_B_OPTION" />
        </list>
      </option>
    </inspection_tool>
    <inspection_tool class="SpellCheckingInspection" enabled="false" level="TYPO" enabled_by_default="false">
      <option name="processCode" value="true" />
      <option name="processLiterals" value="true" />
      <option name="processComments" value="true" />
    </inspection_tool>
    <inspection_tool class="SqlNoDataSourceInspection" enabled="false" level="WARNING" enabled_by_default="false" />
  </profile>
</component>